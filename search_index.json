[["index.html", "     R  ", "      R   2021-05-16   .    .        .      ,         (  R),       House of Europe. "],["chapter1.html", " 1     1.1   R? 1.2   R 1.3    R 1.4      R", "  1       R?   R    R R Project    R   R GUI        (help/?)   R Studio    RStudio Desktop     RStudio   Jupyter Notebook   IDE      R      R          RStudio 1.1   R? R         (DataScience)    (Machine Learning).      R    : ,  .    R       ,                       / .  ,    R   (free)     (open source). R    ,    :  .    ,   ,       .   .     ,       (, MS Excel), R                 .  . R    ,    ,           .    ,         , , caret  mlr. .              (deployment)          (pipeline).        -  , ,    (shiny, shinydashboard, flexdashboard, rmarkdown, knitr ),             . 1.2   R   R      S.   S     C.  S   1976   Bell Labs.  S         .    S-Plus,          Windows  Unix-,    .       R.  1993         ,    R ( ,   R   ,     S   ,      C,    B) (.. , .. , .. , .. , .. , .. , .. . 2012).    (Robert Gentelman  Ross Ihaka)        S,    S-Plus  , ,      ,  .     ,    S.       ,      R  ,        (),   , , ,     S-Plus  R.          R,          (SAS, Stata, SYSSTAT).           R                 ,  ,   ,   . 1.3    R 1.3.1 R Project R    ,     GNU General Public License. ,   R      : UNIX, Windows, MacOS (R Core Team 2020). 1.3.1.1    R     R      https://cran.r-project.org/.     R    .       Windows,            : . 1.1:  R.        install R for the first time: . 1.2:  R.     Download R 4.X.X for Windows,  4.X.X  R,        : . 1.3:  R.           .                . ,   Google Chrome     : . 1.4:  R.    Google Chrome             .                        ,    . 1.3.1.2   R GUI        C:\\Program Files\\R\\R-4.X.X.   R GUI (      R)     bin\\x64 ( i386,    32-  )    Rgui.exe.   R GUI  : . 1.5:    RGui GUI (Graphical User Interface) -          .   R Console   / R,   :               : . 1.6:     RGui  R GUI        -     R,         R.       R-. 1.3.1.3         /      .  R      ,    ,         ,         (               ).      var1, var2      : var1 &lt;- 10 var2 &lt;- sqrt(15) var1 ## [1] 10 var2 ## [1] 3.872983            ls(): ls() ## [1] &quot;var1&quot; &quot;var2&quot;            rm(). ,       rm(list = ls()),       / ,    : rm(list = c(&quot;var1&quot;)) ls() ## [1] &quot;var2&quot;  ,    ,    var2.   (image)         save.image(\"  .RData\"),      load(\"  .RData\"): # Clear workspace rm(list = ls()) # declare data a &lt;- 10 b &lt;- a + 15 # Save image to file save.image(&quot;tmp.RData&quot;) # Clear workspace rm(list = ls()) # load image to file load(&quot;tmp.RData&quot;) print(a) ## [1] 10 print(b) ## [1] 25   2    ,      .        ,       R    .RDS,    saveRDS(', file=\"_.rds\")  readRDS(file=\"_.rds\"). 1.3.1.4      -      ,      .        ,                 .     R      getwd().    RStudio   ,          : getwd() ## [1] &quot;E:/Repos/YuRa/r-science-dev&quot;          setwd().      getwd()      /.             ,                .      Windows   2- : / - ,    ; \\\\ - ,    .           (drive -  ): setwd(&quot;drive:/folder1/folder2/&quot;) setwd(&quot;drive:\\\\folder1\\\\folder2\\\\&quot;)                dir()  list.files(): dir() ## [1] &quot;_bookdown.yml&quot; &quot;_bookdown_files&quot; &quot;_output.yml&quot; ## [4] &quot;01-chapter1.Rmd&quot; &quot;01-chapter1_files&quot; &quot;01-intro_files&quot; ## [7] &quot;02-chapter2.Rmd&quot; &quot;02-chapter2_files&quot; &quot;03-chapter3.Rmd&quot; ## [10] &quot;04-chapter4.Rmd&quot; &quot;05-chapter5.Rmd&quot; &quot;06-chapter6.Rmd&quot; ## [13] &quot;07-chapter7.Rmd&quot; &quot;09-chapter9.Rmd&quot; &quot;10-references.Rmd&quot; ## [16] &quot;book.bib&quot; &quot;css&quot; &quot;favicon.ico&quot; ## [19] &quot;images&quot; &quot;inc&quot; &quot;index.md&quot; ## [22] &quot;index.Rmd&quot; &quot;packages.bib&quot; &quot;preamble.tex&quot; ## [25] &quot;r-science.html&quot; &quot;r-science.md&quot; &quot;r-science.rds&quot; ## [28] &quot;README.md&quot; &quot;render_commands&quot; &quot;render7a459ab78af.rds&quot; ## [31] &quot;RScience.Rproj&quot; &quot;tmp.RData&quot; list.files() ## [1] &quot;_bookdown.yml&quot; &quot;_bookdown_files&quot; &quot;_output.yml&quot; ## [4] &quot;01-chapter1.Rmd&quot; &quot;01-chapter1_files&quot; &quot;01-intro_files&quot; ## [7] &quot;02-chapter2.Rmd&quot; &quot;02-chapter2_files&quot; &quot;03-chapter3.Rmd&quot; ## [10] &quot;04-chapter4.Rmd&quot; &quot;05-chapter5.Rmd&quot; &quot;06-chapter6.Rmd&quot; ## [13] &quot;07-chapter7.Rmd&quot; &quot;09-chapter9.Rmd&quot; &quot;10-references.Rmd&quot; ## [16] &quot;book.bib&quot; &quot;css&quot; &quot;favicon.ico&quot; ## [19] &quot;images&quot; &quot;inc&quot; &quot;index.md&quot; ## [22] &quot;index.Rmd&quot; &quot;packages.bib&quot; &quot;preamble.tex&quot; ## [25] &quot;r-science.html&quot; &quot;r-science.md&quot; &quot;r-science.rds&quot; ## [28] &quot;README.md&quot; &quot;render_commands&quot; &quot;render7a459ab78af.rds&quot; ## [31] &quot;RScience.Rproj&quot; &quot;tmp.RData&quot; 1.3.1.5  (help/?)      R    help(_'__)  ?_'__: # Get help for intersect() function help(intersect)        : help(package = &quot;stats&quot;) 1.3.2   R Studio 1.3.2.1    RStudio Desktop RStudio -      R.     ,   (),   ,    , html-,   ,  ,   ,       . RStudio          Windows, Linux  Mac,   -    Linux RStudio Server  RStudio Server Pro (RStudio Official Website 2021). IDE (integrated development environment) -       . ,     ,       .        . Wikipedia      https://rstudio.com.   ,            :      Products &gt; RStudio.        RStudio Desktop  Open Source   DOWNLOAD RSTUDIO DESKTOP: . 1.7:   RStudio Desktop      RStudio Desktop   : . 1.8:  RStudio Desktop     RStudio.      .   IDE RStudio    3-  4- : * ,     ( ). *        ( ). *   (Environment) ( ) +   (History),     , ,   (Connections),   (Tutorial). *     (Files),   (Packages),  (Help),   (Plots, Viewer). . 1.9:   RStudio Desktop        2  : . 1.10:     RStudio Desktop     data &lt;- c(3,7,1,6,3,4,5,4,2)     .  ,    Environments   ,       (   ).   plot(data, type=\"l\")      (type=\"l\" - linear, \"p\" - point, help(plot)  ). ,        Plots.          ,     html/css/js,       View.     History,       .          (Console)    Up/Down  : 1.3.2.2     RStudio {chapter1322}    R Gui  RStudio   ,             .    .        File &gt; New Project.        New Directory.   ,               . . 1.11: RStudio Desktop.       New Project: . 1.12: RStudio Desktop.  .      Create Project       .              ,     .       *.Rproj   Windows. . 1.13: RStudio Desktop.         R      File &gt; New file &gt; R Script    Ctrl+Shift+N.       Untitled[X],     , ,  TestCode.R      :  ,     20-     [1;5],     ,        (      ).    20-     [1;5]   : vtr &lt;- sample(1:5, 20, replace=TRUE) vtr ## [1] 1 1 4 5 1 3 5 5 3 4 4 4 5 5 1 2 1 1 2 1       ,            .    set.seed(  - ). P.S.     ,   set.seed()  R  4+     3+.      .           : vtr_sum &lt;- sum(vtr) vtr_mean &lt;- mean(vtr) print(paste0(&quot;Sum: &quot;, vtr_sum)) ## [1] &quot;Sum: 58&quot; print(paste0(&quot;Mean: &quot;, vtr_mean)) ## [1] &quot;Mean: 2.9&quot;  : hist(vtr, breaks = 5) . 1.14:     R .     hist()   : https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/hist.    RStudio         : . 1.15: RStudio Desktop.         Environment,      ,       '.            ,  .       . 1.3.3   Jupyter Notebook         ,        .      ,       ,         . _*.        ._           ,   ,         .            .      Anaconda (       Data Science)  Jupyter Notebook  .    Anaconda          : https://www.anaconda.com/products/individual (Anaconda. The Worlds Most Popular Data Science Platform 2021). _*.          Windows 10 Education_.    Anaconda         Windows.   Anaconda Navigator          R: Anaconda       Environments   Create: . 1.16: Anaconda.    ,     [x]      R: . 1.17: Anaconda.      R   R-     Home   : . 1.18: Anaconda.        Launch   Jupyter Notebook    . Jupyter Notebook        .      ,       New &gt; Notebook &gt; R: . 1.19: Jupyter Notebook.    1.3.4   IDE      R         ,       R-.   . Visual Studio Code -     Microsoft,         (Visual Studio Code 2021).     VS Code       R: . 1.20: Visual Studio Code.  RTools Visual Studio Community Edition -      Microsoft. VS         .NET    C#, VB.NET, F# ,      ,     ,      R (Visual Studio Community Edition 2021). Google Collab -        Data Science   Google (Google Colaboratory 2021): . 1.21: Google Collab .       Python. kaggle.com -     Data Science  Machine Learning.   ,       . . 1.22: Kaggle.com        R       ,            . 1.4      R 1.4.1        R ,   ,             .        ,      .   R -               R.          ,       .         cran.r-project.org / (R Core Team 2020)    (dev-    github).    R      ,       .      install.packages(): install.packages(&quot;fun&quot;)         library(): packageDescription(&quot;fun&quot;) help(package = &quot;fun&quot;)          DataCamp: R Packages: A Beginners Guide. 1.4.2     RStudio     RStudio            ,    .         Tools: . 1.23: RStudio Desktop.      Install Packages...  ,             ,      : . 1.24: RStudio Desktop.     RStudio     /,        (   ): . 1.25: RStudio Desktop.               _::_()      library(): . 1.26: RStudio Desktop.    fun       ,           . e "],["chapter2.html", " 2    R:    .  1  2.1     2.2    2.3  2.4    2.5 - ", "  2    R:    .  1                   R                 (round, ceiling, floor, trunc, signif)   (seq, rep)         R -  2.1     2.1.1             .            , ,   . ,   my_variable  10  : my_variable &lt;- 5  my_variable = 5.         . !  ,   (&lt;-, =)   (==)   .  ==      /        TRUE (  )  FALSE (   ).  &lt;-        ,     =.   R        &lt;-.     R    &lt;&lt;-, -&gt;, -&gt;&gt;.       .         R &lt;-  = : Why do we use arrow as an assignment operator? (Colin FAY). Difference between assignment operators in R (Ren Kun). Assignment Operators. : x &lt;- 45 y &lt;- 10 z &lt;- x + y # z = 45 + 10 z ## [1] 55  ,  :      x     45.      y     10.      z      x + y. #  R    ,     .         z. 2.1.2           R: 1.       [a-z, A-z],  [0-9],  .    _. 2.        .     ,      . 3.           , , TRUE/FALSE.       (space).       ,      _   .. ,    my_variable_name  my.variable.name.  myVariableName (camel case)       R,       .    : total, zminna, Sum, .length_of_something, Number123, x_1.    : tot@l, 5x_1, _variable, FALSE, .0ne. 2.2    2.2.1   R          .   -       ,     . , ,        ,   .   (  )        ,  (       ),     .  R,       ,              .       C# (   C/Java): int a = 10; a = &quot;some text&quot;;    C#     a  int (integer -  ),      a   ( string  #).         .     R: a &lt;- 10 a &lt;- &quot;some text&quot; a ## [1] &quot;some text&quot;         some text,   1      ,   - .   R   ,           .   ,     .      R  :     (decimal numbers),  , 4.0, 15.214,   numeric(s).   (natural numbers),  , 4, 15,   integer(s).   (boolean values),  TRUE  FALSE (     T  F),   logical.    (string values),  , \"Hello\", \"12 is number\",   character(s).     : my_numeric - , my_character - , my_logical -  . my_numeric &lt;- 5 my_character &lt;- &quot;universe&quot; my_logical &lt;- FALSE   my_character &lt;- \"5\"     : my_character &lt;- &quot;5&quot; my_sum &lt;- my_numeric + my_character        ,   5  \"5\"     ,      class(): class(5) ## [1] &quot;numeric&quot; class(&quot;5&quot;) ## [1] &quot;character&quot;   class(5)  ,  5     numeric,  class(\"5\")   character,        . 2.2.2                /       .    -         .  ,         . , ,  \"5\" (character)      5 (numeric),  \"five\"     .            is._().    TRUE,       FALSE,   .  : my_numeric &lt;- 5 my_character &lt;- &quot;five&quot; my_logical &lt;- FALSE is.numeric(my_numeric) ## [1] TRUE is.character(my_numeric) ## [1] FALSE        as._().             NA,      : a &lt;- 5 b &lt;- &quot;10&quot; c &lt;- &quot;10, 20&quot; as.numeric(b) ## [1] 10 as.numeric(c) ## Warning: NAs introduced by coercion ## [1] NA            : a &lt;- 5 b &lt;- &quot;10&quot; b &lt;- as.numeric(b) a + b ## [1] 15 number &lt;- as.integer(54) typeof(number) ## [1] &quot;integer&quot; class(number) ## [1] &quot;integer&quot;            :         Array is.array as.array Character is.character as.character Complex is.complex as.complex Dataframe is.data.frame as.data.frame Double is.double as.double Factor is.factor as.factor List is.list as.list Logical is.logical as.logical Matrix is.matrix as.matrix Numeric is.numeric as.numeric Raw is.raw as.raw Time series (ts) is.ts as.ts Vector is.vector as.vector 2.3  2.3.1   R     .     ,     : * : +. * : -. * : /. * : *.     : *   : ^ (    Shift+6  ENG- ). *    (     ): %% (    Shift+5). *  : %/%.    : 5 + 10 ## [1] 15 5 + 4 + 15 ## [1] 24 5 + 53 + 343 ## [1] 401 (5 + 8) + (4 + 9) ## [1] 26 .             .    : 47 - 21 ## [1] 26 15 - (10 - 25) ## [1] 30 .   /          :)   : 5 * 3 ## [1] 15 5 * (2 + 5) ## [1] 35   : 12 / 2 ## [1] 6 (4 + 7) / 3 ## [1] 3.666667       ^   . , , 3^2  9,  2^3 -  2*2*2   8. 5^2 ## [1] 25 (1+3)^3 + 100 ## [1] 164             . ,     5  2  1,  2 * 2 (=4) + 1 = 5 28 %% 7 ## [1] 0 17%%5 ## [1] 2         : 28 %/% 7 ## [1] 4 17 %/% 5 ## [1] 3 Sys.setlocale(&quot;LC_CTYPE&quot;, &quot;ukrainian&quot;) ## [1] &quot;Ukrainian_Ukraine.1251&quot; #        ,            R            .     ,    .         : Sys.setlocale(&quot;LC_CTYPE&quot;, &quot;ukrainian&quot;) 2.3.2                 TRUE,     FALSE,   .   :    &gt;=.  &lt;.    &lt;=.  ==.   !=        3  a, b  c. a &lt;- 12 b &lt;- 5 c &lt;- 7       . ,      /: a &gt; b ## [1] TRUE b + c &lt; a ## [1] FALSE b + c &lt;= a ## [1] TRUE ,      /: a != b ## [1] TRUE a == b + c ## [1] TRUE b == c ## [1] FALSE 2.3.3       R :  &amp; (, Shift-7) -    .  | ( , Shift+\\) -    .  ! ( , Shift+1) - .           .      : A B      A ( A) FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE TRUE TRUE TRUE FALSE     . 2.4    2.4.1   (round, ceiling, floor, trunc, signif)     ,     ,     ,     5 (3.6     4,  3.2  3,  3.5 ). !           .                 .  round() .        () (   ).     (  )   &lt;0.5 &amp; &gt;=0.5 (    )   round(x, y),  x - , y -  (   /). : round(3.557, 2) ## [1] 3.56 round(3.241, 2) ## [1] 3.24 round(-3.557, 2) ## [1] -3.56 round(-3.241, 2) ## [1] -3.24    round(x)   ,      , : round(124.345) ## [1] 124  floor()           floor(): floor(3.557) ## [1] 3 floor(3.241) ## [1] 3 floor(-3.557) ## [1] -4 floor(-3.241) ## [1] -4  ceiling()           ceiling(): ceiling(3.557) ## [1] 4 ceiling(3.241) ## [1] 4 ceiling(-3.557) ## [1] -3 ceiling(-3.241) ## [1] -3  trunc()  trunc()  R      ,     x.    ,     0 (x &lt; 0) trunc()   celing(),      x &gt; 0,  floor(): x &lt;- 5.34 print(paste(&quot;trunc:&quot;, trunc(x), &quot;celing:&quot;, ceiling(x), &quot;floor:&quot;, floor(x), sep = &quot; &quot;)) ## [1] &quot;trunc: 5 celing: 6 floor: 5&quot; x &lt;- x * -1 print(paste(&quot;trunc:&quot;, trunc(x), &quot;celing:&quot;, ceiling(x), &quot;floor:&quot;, floor(x), sep = &quot; &quot;)) ## [1] &quot;trunc: -5 celing: -5 floor: -6&quot;  signif()        ,  , ,    .  ,       11 547 741.3        11.5        signif(x,y),  x - ,      , y -   (  ). : big_number &lt;- 11547741.3 rounded_big_number &lt;- signif(big_number,3) rounded_big_number ## [1] 11500000 rounded_big_number / 1000000 ## [1] 11.5 2.4.2   (seq, rep)     . 2.4.3        . runif(10) ## [1] 0.886498754 0.090903926 0.165796516 0.559961880 0.870694752 0.008559688 ## [7] 0.458639730 0.252696093 0.574020310 0.031568598 sample(100) ## [1] 77 95 63 55 37 75 60 69 28 13 30 72 31 38 15 58 39 65 ## [19] 92 83 18 36 53 88 71 48 59 43 98 78 32 76 54 41 49 94 ## [37] 84 82 57 66 67 12 14 25 81 62 20 74 19 40 89 4 10 90 ## [55] 1 33 35 3 46 100 50 73 5 80 42 17 85 11 68 47 91 52 ## [73] 51 86 61 70 16 79 87 64 45 97 7 56 2 96 34 26 21 27 ## [91] 93 29 6 44 22 8 9 99 23 24 2.4.4      R      R          , ,  .        ,          help()  ?name.     ,           .  ,  log(x)   x   e log(x,n)   x   n exp(x) e   x sqrt(x)    x factorial(x)   x abs(x)   x   R    ,       ,   cos(x), sin(x), tan(x),   acos(x), asin(x), atan(x), acosh(x), asinh(x), atanh(x).             help(function). 2.5 -      . "],["chapter3.html", " 3    R:    .  2  3.1   3.2  (vectors)", "  3    R:    .  2     (vectors)          3.1       . 3.2  (vectors) 3.2.1           .     -    .      ,   -     ,      ().   ,  x = (x1, x2,, xn),   -  , n -   , 3.2.2    -     R,          c()   ,    . .    c()    .      x: x &lt;- 10    x     ,      10.         x: x &lt;- c(1, 2, 2.5, 3) x ## [1] 1.0 2.0 2.5 3.0        : numeric, character, logical : v1 &lt;- c(1, 3, 4, 6, 7) v2 &lt;- c(T, F, F, T, F) v3 &lt;- c(&quot;Hello&quot;, &quot;my&quot;, &quot;friend&quot;, &quot;!&quot;)    ,      rep(), seq()   :: vtr &lt;- 2:7 vtr ## [1] 2 3 4 5 6 7 vtr &lt;- 7:2 vtr ## [1] 7 6 5 4 3 2      ,   c(): x &lt;- 2:3 y &lt;- c(4,6,9) z &lt;- c(x, y, 10:12, 100) z ## [1] 2 3 4 6 9 10 11 12 100           summary(): summary(z) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 2.00 4.00 9.00 17.44 11.00 100.00 3.2.3    "],["chapter4.html", " 4 4.       : , -,  R  4.1     4.2    Telecom Users 4.3    RStudio 4.4 CSV-: ,", "  4 4.       : , -,  R         TelecomUsers    RStudio CSV: ,    XLSX: ,    JSON: ,    API: ,  HTML: ,  PDF: ,   Google Spreadsheets Keywords 4.1         .  ,         3 :         ,          ,    .        ,       ,   .       ,          .       , ,  Microsoft Excel,    -   ,    -   .                 .       ,   ,      .   4.2    Telecom Users         kaggle.com.      https://www.kaggle.com/radmirzosimov/telecom-users-dataset. :            . : Any business wants to maximize the number of customers. To achieve this goal, it is important not only to try to attract new ones, but also to retain existing ones. Retaining a client will cost the company less than attracting a new one. In addition, a new client may be weakly interested in business services and it will be difficult to work with him, while old clients already have the necessary data on interaction with the service. Accordingly, predicting the churn, we can react in time and try to keep the client who wants to leave. Based on the data about the services that the client uses, we can make him a special offer, trying to change his decision to leave the operator. This will make the task of retention easier to implement than the task of attracting new users, about which we do not know anything yet. You are provided with a dataset from a telecommunications company. The data contains information about almost six thousand users, their demographic characteristics, the services they use, the duration of using the operators services, the method of payment, and the amount of payment. The task is to analyze the data and predict the churn of users (to identify people who will and will not renew their contract). The work should include the following mandatory items: Description of the data (with the calculation of basic statistics); Research of dependencies and formulation of hypotheses; Building models for predicting the outflow (with justification for the choice of a particular model) 4. based on tested hypotheses and identified relationships; Comparison of the quality of the obtained models.    : customerID - customer id gender - client gender (male / female) SeniorCitizen - is the client retired (1, 0) Partner - is the client married (Yes, No) tenure - how many months a person has been a client of the company PhoneService - is the telephone service connected (Yes, No) MultipleLines - are multiple phone lines connected (Yes, No, No phone service) InternetService - clients Internet service provider (DSL, Fiber optic, No) OnlineSecurity - is the online security service connected (Yes, No, No internet service) OnlineBackup - is the online backup service activated (Yes, No, No internet service) DeviceProtection - does the client have equipment insurance (Yes, No, No internet service) TechSupport - is the technical support service connected (Yes, No, No internet service) StreamingTV - is the streaming TV service connected (Yes, No, No internet service) StreamingMovies - is the streaming cinema service activated (Yes, No, No internet service) Contract - type of customer contract (Month-to-month, One year, Two year) PaperlessBilling - whether the client uses paperless billing (Yes, No) PaymentMethod - payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic)) MonthlyCharges - current monthly payment TotalCharges - the total amount that the client paid for the services for the entire time Churn - whether there was a churn (Yes or No) 4.3    RStudio RStudio     4.4 CSV-: , CSV -   ,      (Comma Separated Values). CSV          ,           . .       CSV-.      . "],["chapter5.html", " 5 5.    (    dplyr)  5.1     5.2    Telecom Users 5.3    RStudio 5.4 CSV-: ,", "  5 5.    (    dplyr)         TelecomUsers    RStudio CSV: ,    XLSX: ,    JSON: ,    API: ,  HTML: ,  PDF: ,   Google Spreadsheets Keywords 5.1         .  ,         3 :         ,          ,    .        ,       ,   .       ,          .       , ,  Microsoft Excel,    -   ,    -   .                 .       ,   ,      .   5.2    Telecom Users         kaggle.com.      https://www.kaggle.com/radmirzosimov/telecom-users-dataset. :            . : Any business wants to maximize the number of customers. To achieve this goal, it is important not only to try to attract new ones, but also to retain existing ones. Retaining a client will cost the company less than attracting a new one. In addition, a new client may be weakly interested in business services and it will be difficult to work with him, while old clients already have the necessary data on interaction with the service. Accordingly, predicting the churn, we can react in time and try to keep the client who wants to leave. Based on the data about the services that the client uses, we can make him a special offer, trying to change his decision to leave the operator. This will make the task of retention easier to implement than the task of attracting new users, about which we do not know anything yet. You are provided with a dataset from a telecommunications company. The data contains information about almost six thousand users, their demographic characteristics, the services they use, the duration of using the operators services, the method of payment, and the amount of payment. The task is to analyze the data and predict the churn of users (to identify people who will and will not renew their contract). The work should include the following mandatory items: Description of the data (with the calculation of basic statistics); Research of dependencies and formulation of hypotheses; Building models for predicting the outflow (with justification for the choice of a particular model) 4. based on tested hypotheses and identified relationships; Comparison of the quality of the obtained models.    : customerID - customer id gender - client gender (male / female) SeniorCitizen - is the client retired (1, 0) Partner - is the client married (Yes, No) tenure - how many months a person has been a client of the company PhoneService - is the telephone service connected (Yes, No) MultipleLines - are multiple phone lines connected (Yes, No, No phone service) InternetService - clients Internet service provider (DSL, Fiber optic, No) OnlineSecurity - is the online security service connected (Yes, No, No internet service) OnlineBackup - is the online backup service activated (Yes, No, No internet service) DeviceProtection - does the client have equipment insurance (Yes, No, No internet service) TechSupport - is the technical support service connected (Yes, No, No internet service) StreamingTV - is the streaming TV service connected (Yes, No, No internet service) StreamingMovies - is the streaming cinema service activated (Yes, No, No internet service) Contract - type of customer contract (Month-to-month, One year, Two year) PaperlessBilling - whether the client uses paperless billing (Yes, No) PaymentMethod - payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic)) MonthlyCharges - current monthly payment TotalCharges - the total amount that the client paid for the services for the entire time Churn - whether there was a churn (Yes or No) 5.3    RStudio RStudio     5.4 CSV-: , CSV -   ,      (Comma Separated Values). CSV          ,           . .       CSV-.      . "],["chapter8.html", " 6 8.    .", "  6 8.    .     .    "],["chapter7.html", " 7 7.     ,    .", "  7 7.     ,    .     .    "],["chapter6.html", " 8      8.1  8.2  ", "  8                 8.1  8.1.1  8.1.1.1   ,   \\(y = (x+2)^2 + ln(x)\\),  \\(x\\)    100, 105, 110, ..., 200.     data.fame   \\(X\\)  \\(Y\\). 8.1.1.2   ,   \\(y = \\frac{\\sqrt{x+2}}{z}\\),  \\(x\\)    10, 15, 20, ..., 100,  \\(z\\) -     [-10, 10],      \\(x\\).     data.fame   \\(X\\), \\(Z\\)  \\(Y\\). 8.1.1.3       ,       .        [10,100).     10. 8.1.1.4     ,       ,     ,          .        [-100,100].     10. ,    x   : x &lt;- c(1, -5, 10, -8, -2, 5, 4, -9)      : ## [1] 1 10 5 4 -5 -8 -2 -9 8.1.1.5     \\(N\\) (  ).    . 8.1.1.6    .     ,      . 8.1.1.7        ,   .     :        ,     ;         . 8.1.1.8         \\(A\\),      \\(B\\). 8.1.1.9   ,        .        \\([1; 10)\\).    10. 8.1.1.10   ,      .        \\([100; 200]\\).       \\(7\\)-.  1.     \\(7\\)-    .  2.  ,   1  size ( )     . func.genMod7 &lt;- function() { x &lt;- 8 while(x %% 7 != 0) { x &lt;- sample(100:200, size = 1) } return(x) } func.genVectorMod7 &lt;- function(size) { v &lt;- c() for(i in 1:size) { v &lt;- c(v, func.genMod7()) } return(v) } vector &lt;- func.genVectorMod7(100) vector ## [1] 182 154 154 161 189 105 147 168 154 154 175 133 182 112 168 168 140 161 ## [19] 119 133 112 112 175 154 189 126 126 189 140 112 133 133 147 175 196 154 ## [37] 112 182 168 182 189 154 154 147 112 189 154 105 126 154 196 112 175 154 ## [55] 154 161 140 119 133 126 126 112 168 133 140 119 175 196 175 196 126 175 ## [73] 126 133 126 189 196 119 189 105 105 133 126 133 105 133 105 112 133 147 ## [91] 147 147 133 147 140 175 182 119 119 161 8.1.1.11   ,          ,    min()  max().        \\([10;50]\\). 8.1.1.12   ,          ,    min()  max().        \\([10;50]\\). 8.1.1.13 *  ,          . , a &lt;- 10  b &lt;- 25,         : print(a) ## [1] 25 print(b) ## [1] 10 8.1.1.14   ,  8.1.1.15     kaggle.com     (https://www.kaggle.com/ajaypalsinghlo/world-happiness-report-2021).    R. 8.1.2  8.1.2.1   ,      , , ,   .        (list). 8.2   8.2.1       6.1.1.3: x &lt;- sample(10:100, size = 10) for(j in 1:(length(x)-1)) { for(i in 1:(length(x)-1)) { if(x[i] &gt; x[i+1]) { tmp = x[i] x[i] = x[i+1] x[i+1] = tmp } } } print(x) ## [1] 26 32 35 38 47 57 59 84 88 98    6.1.1.4: x &lt;- sample(-100:100, size = 10) print(&quot;Vector before sort:&quot;) ## [1] &quot;Vector before sort:&quot; print(x) ## [1] -82 -10 -77 -58 80 95 -40 -28 -29 -31 for(j in 1:(length(x)-1)) { for(i in 1:(length(x)-1)) { if(x[i] &lt; 0 &amp; x[i+1] &gt; 0) { tmp = x[i] x[i] = x[i+1] x[i+1] = tmp } } } print(&quot;Vector after sort:&quot;) ## [1] &quot;Vector after sort:&quot; print(x) ## [1] 80 95 -82 -10 -77 -58 -40 -28 -29 -31    6.1.1.5: #number &lt;- as.numeric(readline(prompt = &quot; :&quot;)) number &lt;- 15783 sum &lt;- 0 while(number &gt; 0) { last_digit = number %% 10 sum = sum + last_digit number = (number - last_digit) / 10 print(paste0(&quot;Number: &quot;, number, &quot; | Sum: &quot;, sum, &quot; | Last: &quot;, last_digit)) } ## [1] &quot;Number: 1578 | Sum: 3 | Last: 3&quot; ## [1] &quot;Number: 157 | Sum: 11 | Last: 8&quot; ## [1] &quot;Number: 15 | Sum: 18 | Last: 7&quot; ## [1] &quot;Number: 1 | Sum: 23 | Last: 5&quot; ## [1] &quot;Number: 0 | Sum: 24 | Last: 1&quot;    6.1.1.9 ( 1): x &lt;- sample(1:10, size = 4, replace = T) x ## [1] 3 7 6 7 x_parni &lt;- c() for(i in 1:length(x)) { if(x[i] %% 2 == 0) { x_parni &lt;- c(x_parni, x[i]) } } mean(x_parni) ## [1] 6    6.1.1.9 ( 2): x &lt;- sample(1:10, size = 10, replace = T) x ## [1] 1 3 1 5 8 7 7 6 3 8 sum &lt;- 0 count &lt;- 0 for(i in 1:length(x)) { if(x[i] %% 2 == 0) { sum = sum + x[i] count = count + 1 } } mean_value = sum / count mean_value ## [1] 7.333333 8.2.2     6.1.2.1: x &lt;- sample(10:100, size = 10) print(x) ## [1] 18 33 80 88 32 41 12 78 74 68 vector.info &lt;- function(vector) { x &lt;- list() x$Sum &lt;- sum(vector) x$Mean &lt;- mean(vector) x$Median &lt;- median(vector) x$Min &lt;- min(vector) x$Max &lt;- max(vector) return(x) } vector.info(x) ## $Sum ## [1] 524 ## ## $Mean ## [1] 52.4 ## ## $Median ## [1] 54.5 ## ## $Min ## [1] 12 ## ## $Max ## [1] 88 Sys.setlocale(&quot;LC_CTYPE&quot;, &quot;ukrainian&quot;) "],["-e-.html", "e", " e "]]
